func loginHandler(w http.ResponseWriter, r *http.Request) {
    renderTemplate(w, r, "layout.html", map[string]interface{}{
        "Page": "login",
    })
}

func registerHandler(w http.ResponseWriter, r *http.Request) {
    renderTemplate(w, r, "layout.html", map[string]interface{}{
        "Page": "register",
    })
}

func aboutHandler(w http.ResponseWriter, r *http.Request) {
    renderTemplate(w, r, "layout.html", map[string]interface{}{
        "Page": "about",
    })
}

func registerHandler(w http.ResponseWriter, r *http.Request) {
    renderTemplate(w, r, "layout.html", map[string]interface{}{
        "Page": "register",
    })
}

func searchHandler(w http.ResponseWriter, r *http.Request) {
    q := r.URL.Query().Get("q")
    language := r.URL.Query().Get("language")
    if language == "" {
        language = "en"
    }

    var results []Page
    if q != "" {
        rows, _ := db.Query("SELECT id, language, content FROM pages WHERE language=? AND content LIKE ?", language, "%"+q+"%")
        defer rows.Close()
        for rows.Next() {
            var p Page
            rows.Scan(&p.ID, &p.Language, &p.Content)
            results = append(results, p)
        }
    }

    renderTemplate(w, r, "layout.html", map[string]interface{}{
        "Page": "search",
        "Query": q,
        "SearchResults": results,
    })
}